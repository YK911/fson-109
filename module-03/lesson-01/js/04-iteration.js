/**
 * –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É
 *
 * - –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É —Ü–∏–∫–ª–æ–º for
 * - –ú–µ—Ç–æ–¥ includes
 * - –¶–∏–∫–ª for...of
 * - –†—ñ–∑–Ω–∏—Ü—è —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ for —Ç–∞ for...of
 */

// const friends = ['Mango', 'Kiwi', 'Poly', 'Ajax', ['Neptun', 'Saturn']];
// console.table(friends);
// const isPolyFriend = friends.includes('Poly');
// console.log('isPolyFriend:', isPolyFriend);

// function customIncludes(array, friendName) {
// for (let i = 0; i < array.length; i += 1) {
//   if (array[i] === friendName) {
//     console.log(`Hoorray we find ${array[i]}`);
//     return true;
//   }
// }

//   return false;
// }

// const isPolyFriend = customIncludes(friends, 'Poly');
// console.log('isPolyFriend:', isPolyFriend);
// const friends = ['Mango', 'Kiwi', 'Poly', 'Ajax'];

// for (let friend of friends) {
//   friend = 'Empty';
// }
// console.log(friends);

// for (let i = 0; i < friends.length; i++) {
//   friends[i] = 'Empty';
// }
// console.log(friends);

// const matrix = [
//   [1, 2, 3],
//   [4, 5, 6],
//   [7, 8, 9],
// ];
// console.log(matrix[1][1]);

// for (let row = 0; row < matrix.length; row++) {
//   // console.log(matrix[row]);

//   for (let col = 0; col < matrix[row].length; col++) {
//     const element = matrix[row][col];
//     console.log('element:', element);
//   }
// }

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
 * –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
 * –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
 */

const values = '8 11';
const values1 = '10 10';

function rectSquare(param) {
  const paramToArray = param.split(' ');
  const width = paramToArray[0];
  const height = paramToArray[1];

  return width * height;

  // const square = width * height;
  // return square;
}

// const res1 = rectSquare(values);
// console.log('res1:', res1);
// const res2 = rectSquare(values1);
// console.log('res2:', res2);
/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
 * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
 * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
 * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 */

const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

function printFruits(array) {
  for (let index = 0; index < array.length; index++) {
    const element = array[index];
    console.log(`printFruits  ${index + 1}:`, element);
  }
}

// printFruits(fruits);
